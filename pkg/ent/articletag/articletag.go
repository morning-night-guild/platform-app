// Code generated by ent, DO NOT EDIT.

package articletag

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the articletag type in the database.
	Label = "article_tag"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTag holds the string denoting the tag field in the database.
	FieldTag = "tag"
	// FieldArticleID holds the string denoting the article_id field in the database.
	FieldArticleID = "article_id"
	// EdgeArticle holds the string denoting the article edge name in mutations.
	EdgeArticle = "article"
	// Table holds the table name of the articletag in the database.
	Table = "article_tags"
	// ArticleTable is the table that holds the article relation/edge.
	ArticleTable = "article_tags"
	// ArticleInverseTable is the table name for the Article entity.
	// It exists in this package in order to avoid circular dependency with the "article" package.
	ArticleInverseTable = "articles"
	// ArticleColumn is the table column denoting the article relation/edge.
	ArticleColumn = "article_id"
)

// Columns holds all SQL columns for articletag fields.
var Columns = []string{
	FieldID,
	FieldTag,
	FieldArticleID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
