name: container delivery
run-name: ${{ github.ref_name }} by @${{ github.actor }} ${{ github.workflow }}
on:
  workflow_dispatch:
  schedule:
    - cron: '0 13 * * 6'
jobs:
  check:
    runs-on: ubuntu-22.04
    outputs:
      diff: ${{ steps.check.outputs.diff }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to get tags 
      - name: Check diff
        id: check
        run: |
          latest_tag=$(git tag | sort -r | sed -n '1p')
          echo "${latest_tag}"
          latest_commit=$(git rev-parse HEAD)
          echo "${latest_commit}"
          files=$(git diff --name-only ${latest_tag} ${latest_commit} | wc -l)
          if [[ ${files} -eq 0 ]]; then
            echo "diff=false" >> $GITHUB_OUTPUT
          else
            echo "diff=true" >> $GITHUB_OUTPUT
          fi
  container-push:
    needs: check
    if: needs.check.outputs.diff == 'true'
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.create-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create tag
        id: create-tag
        run: |
          TAG=`date +%Y-%m-%d-%H-%M-%S`
          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Setup aqua
        uses: aquaproj/aqua-installer@v2.1.1
        with:
          aqua_version: v2.9.0
      - name: Install ko
        run: ${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin/aqua install -t ko
      - name: Docker login
        run: ko login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }} index.docker.io
      - name: Build and push app api container
        working-directory: ./cmd/app/api
        run: |
          KO_DOCKER_REPO=${{ secrets.DOCKERHUB_USERNAME }}/platform-app-api \
          SOURCE_DATE_EPOCH=$(date +%s) \
          ko build --sbom=none --bare --tags=${{ env.TAG }},latest ./ --platform=linux/amd64
      - name: Build and push app core container
        working-directory: ./cmd/app/core
        run: |
          KO_DOCKER_REPO=${{ secrets.DOCKERHUB_USERNAME }}/platform-app-core \
          SOURCE_DATE_EPOCH=$(date +%s) \
          ko build --sbom=none --bare --tags=${{ env.TAG }},latest ./ --platform=linux/amd64
      - name: Build and push db migrate container
        working-directory: ./cmd/db/migrate
        run: |
          KO_DOCKER_REPO=${{ secrets.DOCKERHUB_USERNAME }}/platform-db-migrate \
          SOURCE_DATE_EPOCH=$(date +%s) \
          ko build --sbom=none --bare --tags=${{ env.TAG }},latest ./ --platform=linux/amd64
      - name: Build and push db backup container
        working-directory: ./cmd/db/backup
        run: |
          KO_DOCKER_REPO=${{ secrets.DOCKERHUB_USERNAME }}/platform-db-backup \
          SOURCE_DATE_EPOCH=$(date +%s) \
          ko build --sbom=none --bare --tags=${{ env.TAG }},latest ./ --platform=linux/amd64
  create-tag:
    needs: container-push
    runs-on: ubuntu-22.04
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_GITHUB_APP_ID }}
          private_key: ${{ secrets.BOT_GITHUB_APP_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate-token.outputs.token }}
      - name: Create tag
        run: |
          git tag ${{ needs.container-push.outputs.tag }}
          git push origin ${{ needs.container-push.outputs.tag }}
  repository-dispatch:
    needs: container-push
    runs-on: ubuntu-22.04
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_GITHUB_APP_ID }}
          private_key: ${{ secrets.BOT_GITHUB_APP_PRIVATE_KEY }}
      - name: Repository dispatch
        run: |
          curl -X POST \
            -H "Accespt: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ steps.generate-token.outputs.token }}" \
            https://api.github.com/repos/morning-night-guild/platform-infra/dispatches \
            -d '{"event_type": "manifest-update", "client_payload": {"tag": "${{ needs.container-push.outputs.tag }}"}}'
