// Code generated by MockGen. DO NOT EDIT.
// Source: api_health.go

// Package usecase is a generated GoMock package.
package usecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAPIHealth is a mock of APIHealth interface.
type MockAPIHealth struct {
	ctrl     *gomock.Controller
	recorder *MockAPIHealthMockRecorder
}

// MockAPIHealthMockRecorder is the mock recorder for MockAPIHealth.
type MockAPIHealthMockRecorder struct {
	mock *MockAPIHealth
}

// NewMockAPIHealth creates a new mock instance.
func NewMockAPIHealth(ctrl *gomock.Controller) *MockAPIHealth {
	mock := &MockAPIHealth{ctrl: ctrl}
	mock.recorder = &MockAPIHealthMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIHealth) EXPECT() *MockAPIHealthMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockAPIHealth) Check(arg0 context.Context, arg1 APIHealthCheckInput) (APIHealthCheckOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check", arg0, arg1)
	ret0, _ := ret[0].(APIHealthCheckOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Check indicates an expected call of Check.
func (mr *MockAPIHealthMockRecorder) Check(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockAPIHealth)(nil).Check), arg0, arg1)
}
