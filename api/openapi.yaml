openapi: 3.0.3
info:
  title: Morning Night Guild - App API
  description: |-
    This is the AppAPI API documentation.
  termsOfService: https://example.com
  contact:
    email: morning.night.guild@example.com
  license:
    name: MIT
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080/api
tags:
  - name: auth
    description: 認証
  - name: article
    description: 記事
  - name: health
    description: ヘルスチェック
paths:
  /v1/auth/signup:
    post:
      tags:
        - auth
      summary: サインアップ
      description: ユーザーを登録する
      operationId: v1AuthSignUp
      security:
        - apiKey: []      
      requestBody:
        required: true
        description: サインアップリクエストボディ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1AuthSignUpRequestSchema'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /v1/auth/signin:
    post:
      tags:
        - auth
      summary: サインイン
      description: ユーザーを認証する
      operationId: v1AuthSignIn
      requestBody:
        required: true
        description: サインインリクエストボディ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1AuthSignInRequestSchema'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /v1/auth/verify:
    get:
      tags:
        - auth
      summary: 検証
      description: 検証を行う
      operationId: v1AuthVerify
      security:
        - authTokenCookie: []
        - sessionTokenCookie: []      
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthVerifyUnauthorizedResponseSchema'
        '500':
          description: Internal Server Error
  /v1/auth/refresh:
    get:
      tags:
        - auth
      summary: リフレッシュ
      description: セッショントークンとクライアント署名により認証トークンを再発行する
      operationId: v1AuthRefresh
      security:
        - sessionTokenCookie: []
      parameters:
        - name: code
          in: query
          description: 署名付きコード
          required: true
          explode: true
          schema:
            type: string
        - name: signature
          in: query
          description: 署名
          required: true
          explode: true
          schema:
            type: string
        - name: expiresIn
          in: query
          required: false
          explode: true
          schema:
            type: integer
            description: トークン有効期限(秒)
            default: 3600
            minimum: 0
            maximum: 3600
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /v1/auth/signout:
    get:
      tags:
        - auth
      summary: サインアウト
      description: サインアウトする
      operationId: v1AuthSignOut
      security:
        - authTokenCookie: []
        - sessionTokenCookie: []      
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /v1/auth/signout/all:
    get:
      tags:
        - auth
      summary: サインアウトオール
      description: 該当ユーザーのすべてのセッションにてサインアウトする
      operationId: v1AuthSignOutAll
      security:
        - authTokenCookie: []
        - sessionTokenCookie: []      
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /v1/auth/password:
    put:
      tags:
        - auth
      summary: パスワード変更
      description: パスワードを変更する。認証トークンとセッショントークンは新たに発行される。（これまで発行されているトークンは無効化される）
      operationId: v1AuthChangePassword
      security:
        - authTokenCookie: []
        - sessionTokenCookie: []
      requestBody:
        required: true
        description: パスワード更新リクエストボディ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1AuthChangePasswordRequestSchema'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /v1/articles:
    get:
      tags:
        - article
      summary: 記事一覧
      description: 記事一覧を取得する
      operationId: v1ArticleList
      security:
        - authTokenCookie: []
        - sessionTokenCookie: []    
      parameters:
        - name: maxPageSize
          in: query
          description: ページサイズ
          required: false
          explode: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 20
        - name: pageToken
          in: query
          description: トークン
          required: false
          explode: true
          schema:
            type: string
        - name: title
          in: query
          description: タイトルによる部分一致検索
          required: false
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ArticleListResponseSchema'
        '500':
          description: Internal Server Error
    post:
      tags:
        - article
      summary: 記事共有
      description: 記事を共有する
      operationId: v1ArticleShare
      security:
        - apiKey: []
      requestBody:
        required: true
        description: 記事共有リクエストボディ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1ArticleShareRequestSchema'
      responses:
        '200':
          description: 成功
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /v1/articles/{articleId}:
    delete:
      tags:
        - article
      summary: 記事削除
      description: 記事を削除する
      operationId: v1ArticleDelete
      security:
        - apiKey: []
      parameters:
        - name: articleId
          in: path
          description: 記事ID
          required: true
          explode: true
          schema:
            type: string
            format: uuid
          example: 00000000-0000-0000-0000-000000000000
      responses:
        '200':
          description: 成功、指定した記事IDが存在しない場合も成功扱いとなる
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /v1/health/api:
    get:
      tags:
        - health
      summary: apiヘルスチェック
      description: ヘルスチェック
      operationId: v1HealthAPI
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
  /v1/health/core:
    get:
      tags:
        - health
      summary: coreヘルスチェック
      description: ヘルスチェック
      operationId: v1HealthCore
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: api-key
      in: header
    authTokenCookie:
      type: apiKey
      name: auth-token
      in: cookie
    sessionTokenCookie:
      type: apiKey
      name: session-token
      in: cookie
  schemas:
    ArticleSchema:
      type: object
      properties:
        id:
          type: string
          description: id
          format: uuid
        url:
          type: string
          description: 記事のURL
          format: uri
          example: https://example.com
        title:
          type: string
          description: タイトル
          example: title
        description:
          type: string
          description: description
          example: description
        thumbnail:
          type: string
          description: サムネイルのURL
          format: uri
          example: https://example.com
        tags:
          type: array
          description: タグ
          items:
            type: string
            example: tag
    V1AuthSignUpRequestSchema:
      type: object
      properties:
        email:
          type: string
          description: メールアドレス
          format: email
          example: morning.night.guild@example.com
        password:
          type: string
          description: パスワード
          example: password
      required:
        - email
        - password
    V1AuthSignInRequestSchema:
      type: object
      properties:
        email:
          type: string
          description: メールアドレス
          format: email
          example: morning.night.guild@example.com
        password:
          type: string
          description: パスワード
          example: password
        publicKey:
          type: string
          description: 公開鍵
          format: base64
        expiresIn:
          type: integer
          description: トークン有効期限(秒)
          default: 3600
          minimum: 0
          maximum: 3600
      required:
        - email
        - password
        - publicKey
    V1AuthVerifyUnauthorizedResponseSchema:
      type: object
      properties:
        code:
          type: string
          description: |-
            リフレッシュコード
            このコードを使用してトークンを新たに取得することができます。
            リフレッシュできる見込みがない場合(セッショントークンがない状態でのリクエスト)ではリフレッシュ用コードは払い出しません。
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      required:
        - code
    V1AuthChangePasswordRequestSchema:
      type: object
      properties:
        email:
          type: string
          description: メールアドレス
          format: email
          example: morning.night.guild@example.com
        oldPassword:
          type: string
          description: 旧パスワード
          example: OldOldOld
        newPassword:
          type: string
          description: 新パスワード
          example: NewNewNew
        publicKey:
          type: string
          description: 公開鍵
          format: base64
        expiresIn:
          type: integer
          description: トークン有効期限(秒)
          default: 3600
          minimum: 0
          maximum: 3600
      required:
        - email
        - oldPassword
        - newPassword
        - publicKey
    V1ArticleListResponseSchema:
      type: object
      properties:
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSchema'
        nextPageToken:
          type: string
          description: 次回リクエスト時に指定するページトークン
    V1ArticleShareRequestSchema:
      type: object
      properties:
        url:
          type: string
          description: 記事のURL
          format: uri
          example: https://example.com
        title:
          type: string
          description: タイトル
          example: title
        description:
          type: string
          description: description
          example: description
        thumbnail:
          type: string
          description: サムネイルのURL
          format: uri
          example: https://example.com
      required:
        - url
